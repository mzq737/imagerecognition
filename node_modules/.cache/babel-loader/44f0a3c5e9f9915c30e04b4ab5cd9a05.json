{"ast":null,"code":"var _jsxFileName = \"/Users/zqm/JavaScriptProjects/imagerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '8683bad9ae8f4570b69a33c9ef143df0'\n});\nconst parameters = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const regions = data.outputs[0].data.regions;\n      const faces = regions.map(region => region.region_info.bounding_box);\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return faces.map(face => {\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - face.right_col * width,\n          bottomRow: height - face.bottom_row * height,\n          face: 'face',\n          num: '1.00'\n        };\n      });\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: parameters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      box: this.state.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zqm/JavaScriptProjects/imagerecognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","parameters","constructor","onInputChange","event","setState","input","target","value","calculateFaceLocation","data","regions","outputs","faces","map","region","region_info","bounding_box","image","document","getElementById","width","Number","height","face","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","num","displayFaceBox","box","console","log","onButtonSubmit","imageUrl","state","models","predict","then","response","catch","err","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from'./components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '8683bad9ae8f4570b69a33c9ef143df0'\n });\n\nconst parameters = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 100\n      },\n      \"size\": {\n          \"value\": 3\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  } \n\n  // calculateFaceLocation = (data) => {\n  //   const face = data.outputs[0].data.regions[0].region_info.bounding_box;\n  //   const image = document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return {\n  //     leftCol: face.left_col * width,\n  //     topRow: face.top_row * height,\n  //     rightCol: width - (face.right_col * width),\n  //     bottomRow: height - (face.bottom_row * height),\n  //     face: 'face',\n  //     num: '1.00'\n  //   }\n  // }\n\n  calculateFaceLocation = (data) => {\n    const regions = data.outputs[0].data.regions\n    const faces = regions.map(region => region.region_info.bounding_box);\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return (\n      faces.map(face => {\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - (face.right_col * width),\n          bottomRow: height - (face.bottom_row * height),\n          face: 'face',\n          num: '1.00'\n        }\n      })\n    )\n  }\n\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});   \n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n      .predict(\n        \"a403429f2ddf4b49b307e318f00e528b\", \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n          params = {parameters}\n        />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}